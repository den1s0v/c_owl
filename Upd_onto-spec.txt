# ==========================

Используем простые property для выполнения модификации онтологии

* Удаление связи prop1

UNLINK_prop1(?x, ?y)


* Добавление связи prop1  (позже)

LINK_prop1(?x, ?y)


* Удаление объекта (экземпляра) ?x

DESTROY_INSTANCE(?x)   # назначение объекту спец. класса DESTROY_INSTANCE


* Добавление объектов (экземпляров) класса Class1

CREATE(INSTANCE , "Class1{prop1=value1; prop2=value2}")  # назначение свойства глобальному спец. экземпляру со строкой

# если prop - DataProperty, то оставляем так
# если prop - ObjectProperty, то в условной части вытаскиваем id (поле-идентификатор) объекта и заменяем value на id.


* Подсчёт количества связей (с указанной property):
    # одного экземплярам с любыми другими экземплярами: a prop *  

class prop1(A >> B): pass

У объекта (субъекта в терминах триплета), для которого нужно подсчитать число исходящих связей prop1, нужно создать свойство COUNT_prop1 (Thing >> int) с любым значением, и на каждом шаге обновления (после прогона ризонера) значение этого свойства обновится в соответствии с актуальным числом привязанных свойством prop1 объектов.

