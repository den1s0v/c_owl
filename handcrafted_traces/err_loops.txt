(-) {
{
"algorithm": [

	{"while":"есть_элементы", "name":"по_массиву", "body": [
			"печатать_элемент",
			"перейти_к_следующему"
		]
	}
]
}

// алгоритм alg07_feach (while в стиле foreach, с 2 действиями)
{
пока есть_элементы  // по_массиву
{
    печатать_элемент
    перейти_к_следующему
}
}

/* 
alg07_feach 0 NoCondition (3) Нет условия цикла
категории ошибок: Conditional_Loop (NoCondition)
*/
{
началась программа
    начался цикл по_массиву 1-й раз
    закончился цикл по_массиву 1-й раз  // ошибка !
закончилась программа
}
Объясните, почему наличие конца цикла в указанном месте ошибочно.
Наличие конца цикла в указанном месте ошибочно, потому что ...
// Цикл (в данном случае цикл ПОКА) не может завершиться без проверки условия хотя бы раз, поэтому проверка условия должна была выполниться до завершения цикла.
Цикл "по_массиву" еще не закончится, т.к. выход из цикла происходит, когда условие цикла стало ложным. В данном случае ни одной проверки условия не было выполнено.


// =======================
// =======================
// =======================
// =======================
// =======================
}

// Алгоритмы

{
"algorithm": [

	{"foreach":"элемента", "in": "массиве А", "name":"печать_массива_А", "body": [
			"печатать_элемент"
		]
	}
]
}

// алгоритм 08_foreach
{
для каждого элемента в массиве А  // печать_массива_А
    печатать_элемент
}
// трассы подряд (ШАБЛОН) ==========================
{
/* 
08_foreach 0 (с.) ини_____ция (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
/* 
08_foreach 10 (с.) ини_____ция (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
/* 
08_foreach 110 (с.) ини_____ция (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к следующему элементу) 1-й раз
        началась итерация 2 цикла печать_массива_А
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}

кон alg_08 }

!!!
// алгоритм 09_for+if
{
для день от 16 до 17 с шагом +1  // по_рабочим_дням
    если работал  // работал_ли
        молодец
}


{
"algorithm": [
    {"for":"число", "from":"3", "to":"6", "step":"2",
        "update_act": "увеличить число на 2",
        "name":"по_нечётным", "body": [
            "печатать_число"
    ]}
]}

// алгоритм 11_for342
{
для число от 3 до 4 с шагом +2  // по_нечётным
    печатать_число
}
/* 
11_for342 10
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число <= 4) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 1-й раз
        условие цикла (число <= 4) выполнилось 2-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}


// алгоритм 11_for352
{
для число от 3 до 5 с шагом +2  // по_нечётным
    печатать_число
}
/* 
11_for352 110
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число <= 5) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 1-й раз
        условие цикла (число <= 5) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_нечётным
            печатать_число выполнилось 2-й раз
        закончилась итерация 2 цикла по_нечётным
        выполнился переход (увеличить число на 2) 2-й раз
        условие цикла (число <= 5) выполнилось 3-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}

// алгоритм 11_for362
{
для число от 3 до 6 с шагом +2  // по_нечётным
    печатать_число
}
/* 
11_for362 110
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число <= 6) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 1-й раз
        условие цикла (число <= 6) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_нечётным
            печатать_число выполнилось 2-й раз
        закончилась итерация 2 цикла по_нечётным
        выполнился переход (увеличить число на 2) 2-й раз
        условие цикла (число <= 6) выполнилось 3-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}



// алгоритм 11_for372
{
для число от 3 до 7 с шагом +2  // по_нечётным
    печатать_число
}

/* 
11_for372 110
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число < 7) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 1-й раз
        условие цикла (число < 7) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_нечётным
            печатать_число выполнилось 2-й раз
        закончилась итерация 2 цикла по_нечётным
        выполнился переход (увеличить число на 2) 2-й раз
        условие цикла (число < 7) выполнилось 3-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}


{
"algorithm": [

	{"while":"красный", "name":"ожидание", "body": [
			"ждать"
		]
	},
    "ждать_секунды(3)",
    "идти"
]
}
// алгоритм 10_while
{
пока красный  // ожидание
    ждать
ждать_секунды(3)
идти
}
// трассы подряд (ШАБЛОН) ==========================
{
/* 
10_while 0 (с.3) проверка (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 10 (с.3) проверка (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 110 (с.3) проверка (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - истина
        началась итерация 2 цикла ожидание
            ждать выполнилось 2-й раз
        закончилась итерация 2 цикла ожидание
        условие цикла (красный) выполнилось 3-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}

кон alg_10 }

{
"algorithm": [

	{"name":"ввод_даты", "body": [
			"запросить_дату"
		],
        "do while":"дата_некорректна"
	}
]
}
// алгоритм 06_do
{
делать   // ввод_даты
    запросить_дату
пока дата_некорректна
}
// трассы подряд (ШАБЛОН) ==========================
{
/* 
06_do 0 (с.) первая (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 10 (с.) первая (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 110 (с.) первая (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - истина
        началась итерация 3 цикла ввод_даты
            запросить_дату выполнилось 3-й раз
        закончилась итерация 3 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 3-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}

кон 06_do }

******************************************************

категории ошибок: Conditional_Loop (NoCondition)

/*
06_do 0 NoCondition (с.6) ни одного условия
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
    закончился цикл ввод_даты 1-й раз  // ошибка !
закончилась программа
}
Объясните, почему наличие конца цикла в указанном месте ошибочно.
Наличие конца цикла в указанном месте ошибочно, потому что ...
Цикл "ввод_даты" еще не закончится, т.к. выход из цикла произойдёт, когда условие цикла станет ложным. В данном случае условие цикла не проверялось.



******************************************************

категории ошибок: Conditional_Loop (MissingIterationAfterTrueCondition)

/*
10_while 10 MissingIterationAfterTrueCondition (с.4) нет итерации после истинного условия
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
    закончился цикл ожидание 1-й раз  // ошибка !
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
Объясните, почему наличие конца цикла в указанном месте ошибочно.
Наличие конца цикла в указанном месте ошибочно, потому что ...
Цикл "ожидание" еще не закончится, т.к. при истинном условии продолжения ("красный") итерация цикла не была выполнена (т.е., итерация ошибочно пропущена).



******************************************************

категории ошибок: Conditional_Loop (MissingIterationBetweenLoopConditions)

/*
10_while 110 MissingIterationBetweenLoopConditions (с.4) дубликат условия
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        условие цикла (красный) выполнилось 2-й раз - истина  // ошибка !
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 3-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
Объясните, почему наличие условия цикла в указанном месте ошибочно.
Наличие условия цикла в указанном месте ошибочно, потому что ...
Условие цикла "ожидание" проверять рано, т.к. сначала (при истинном условии продолжения) должна была выполниться итерация цикла. Т.е., либо ошибочно пропущена итерация, либо условие ("красный") ошибочно повторено лишний раз.


******************************************************

категории ошибок: Conditional_Loop (MissingConditionBetweenIterations)

/*
10_while 110 MissingConditionBetweenIterations (с.7) дубликат итерации
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        началась итерация 2 цикла ожидание  // ошибка !
            ждать выполнилось 2-й раз
        закончилась итерация 2 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
Объясните, почему наличие начала итерации в указанном месте ошибочно.
Наличие начала итерации в указанном месте ошибочно, потому что ...
Вторую итерацию цикла "ожидание" начинать рано, т.к. перед этим цикл должен был проверить условие продолжения цикла (после завершения первой итерации). Т.е., либо пропущено условие ("красный"), либо итерация ошибочно повторена лишний раз.



******************************************************

категории ошибок: Conditional_Loop (MissingConditionAfterIteration)

/*
10_while 10 MissingConditionAfterIteration (с.7) нет условия после итерации
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
    закончился цикл ожидание 1-й раз  // ошибка !
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
Объясните, почему наличие конца цикла в указанном месте ошибочно.
Наличие конца цикла в указанном месте ошибочно, потому что ...
Цикл "ожидание" еще не закончится, ведь чтобы узнать, продолжится цикл или нет, необходимо проверять условие продолжения цикла после каждой итерации. В данном случае, после первой итерации ошибочно пропущена как минимум одна проверка условия.


******************************************************

категории ошибок: Conditional_Loop (ExtraActsBetweenFalseConditionAndLoopEnd)

/*
08_foreach 0 ExtraActsBetweenFalseConditionAndLoopEnd (с.4) цикл не заканчивается
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - ложь
        выполнился переход (к первому элементу) 1-й раз  // ошибка !
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие перехода цикла в указанном месте ошибочно.
Наличие перехода цикла в указанном месте ошибочно, потому что ...
Переход цикла "печать_массива_А" не выполнится, т.к. по ложному условию продолжения цикл сразу завершается. В данном случае, между завершающей проверкой условия и концом цикла присутствует лишний акт (переход).



******************************************************

категории ошибок: While_Loop (MissingConditionBeforeWhileIteration)

/*
10_while 10 MissingConditionBeforeWhileIteration (с.3) нет первого условия While
*/ {
началась программа
    начался цикл ожидание 1-й раз
        началась итерация 1 цикла ожидание  // ошибка !
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 1-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
Объясните, почему наличие начала итерации в указанном месте ошибочно.
Наличие начала итерации в указанном месте ошибочно, потому что ...
Первую итерацию цикла "ожидание" начинать рано, т.к. перед этим цикл ПОКА должен был проверить условие продолжения цикла (цикл ПОКА является циклом с предусловием). Т.е., пропущено условие ("красный").


******************************************************

категории ошибок: Do_Loop (NoIterationsInDoLoop)

/*
06_do 0 NoIterationsInDoLoop (с.3) нет итераций Do-While
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
    закончился цикл ввод_даты 1-й раз  // ошибка !
закончилась программа
}
Объясните, почему наличие конца цикла в указанном месте ошибочно.
Наличие конца цикла в указанном месте ошибочно, потому что ...
Цикл "ввод_даты" еще не закончится, т.к. выход из цикла произойдёт, когда условие цикла станет ложным. В данном случае условие цикла не проверялось. Кроме того, в цикле ДО всегда выполняется как минимум одна итерация, которая в данном случае также пропущена.


******************************************************

категории ошибок: Do_Loop (MissingDoIterationBeforeCondition)

/*
06_do 0 MissingDoIterationBeforeCondition (с.3) пропущена первая итерация Do-While
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина // ошибка !
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
Объясните, почему наличие условия цикла в указанном месте ошибочно.
Наличие условия цикла в указанном месте ошибочно, потому что ...
Условие цикла "ввод_даты" не выполнится, т.к. в цикле с постусловием (цикле ДО) сначала выполняется итерация, а проверка условия продолжения цикла - после неё. В данном случае условие цикла было неверно вставлено перед первой итерацией.




******************************************************

категории ошибок: For_Loop (MissingInitActInForLoop)

/*
11_for342 10 MissingInitActInForLoop (с.3) пропущена инициализация цикла For
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        условие цикла (число <= 4) выполнилось 1-й раз - истина // ошибка !
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 1-й раз
        условие цикла (число <= 4) выполнилось 2-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}
Объясните, почему наличие условия цикла в указанном месте ошибочно.
Наличие условия цикла в указанном месте ошибочно, потому что ...
Условие цикла "по_нечётным" выполнять рано, т.к. в начале цикла ДЛЯ всегда выполняется инициализация, а затем начинается цикл с предусловием (и переходом после каждой итерации). В данном случае инициализация цикла была ошибочно пропущена.


******************************************************

категории ошибок: For_Loop (DuplicatesOfForInit)

/*
11_for342 10 DuplicatesOfForInit (с.9) дубликат инициализации цикла For
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число <= 4) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 1-й раз
        выполнилась инициализация (число = 3) 2-й раз  // ошибка !
        условие цикла (число <= 4) выполнилось 2-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}
Объясните, почему наличие инициализации цикла в указанном месте ошибочно.
Наличие инициализации цикла в указанном месте ошибочно, потому что ...
Инициализация цикла "по_нечётным" не выполнится, т.к. инициализация цикла ДЛЯ всегда выполняется ровно один раз, в начале цикла. В данном случае инициализация цикла была ошибочно выполнена повторно.


******************************************************

категории ошибок: For_Loop (MissingConditionAfterForInit, NoCondition)

/*
11_for352 110 MissingConditionAfterForInit (с.4) нет проверки условия
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
    закончился цикл по_нечётным 1-й раз  // ошибка !
закончилась программа
}
Объясните, почему наличие конца цикла в указанном месте ошибочно.
Наличие конца цикла в указанном месте ошибочно, потому что ...
Цикл "по_нечётным" еще не закончится, ведь чтобы узнать, начнётся цикл с предусловием или нет, необходимо проверить условие продолжения цикла перед первой итерацией. В данном случае, после инициализации цикла ДЛЯ ошибочно пропущена первая проверка условия.


******************************************************

категории ошибок: For_Loop (MissingForUpdateAfterIteration)

/*
11_for352 110 MissingForUpdateAfterIteration (с.13) пропущен переход
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число <= 5) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 1-й раз
        условие цикла (число <= 5) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_нечётным
            печатать_число выполнилось 2-й раз
        закончилась итерация 2 цикла по_нечётным
        условие цикла (число <= 5) выполнилось 3-й раз - ложь // ошибка !
    закончился цикл по_нечётным 1-й раз
закончилась программа
}
Объясните, почему наличие условия цикла в указанном месте ошибочно.
Наличие условия цикла в указанном месте ошибочно, потому что ...
Условие цикл "по_нечётным" выполнять рано, т.к., после второй итерации цикла ДЛЯ необходимо было выполнить переход цикла (как после первой итерации). В данном случае, после завершения второй итерации цикла ошибочно пропущен переход цикла ДЛЯ.


******************************************************

категории ошибок: For_Loop (MissingConditionAfterForUpdate)

/*
11_for362 110 MissingConditionAfterForUpdate (с.9) нет условия после перехода
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число <= 6) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 1-й раз
        началась итерация 2 цикла по_нечётным  // ошибка !
            печатать_число выполнилось 2-й раз
        закончилась итерация 2 цикла по_нечётным
        выполнился переход (увеличить число на 2) 2-й раз
        условие цикла (число <= 6) выполнилось 2-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}
Объясните, почему наличие начала итерации в указанном месте ошибочно.
Наличие начала итерации в указанном месте ошибочно, потому что ...
Вторую итерацию цикла "по_нечётным" начинать рано, т.к. сначала цикл должен был проверить условие продолжения ("число <= 6"). Т.е., пропущено условие цикла.


******************************************************

категории ошибок: For_Loop (Missing ForUpdate Between Iteration and Condition)

/*
11_for372 110 Missing ForUpdate Between Iteration and Condition (с.8) подряд итерация и условие
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число < 7) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        условие цикла (число < 7) выполнилось 2-й раз - истина // ошибка !
        началась итерация 2 цикла по_нечётным
            печатать_число выполнилось 2-й раз
        закончилась итерация 2 цикла по_нечётным
        выполнился переход (увеличить число на 2) 2-й раз
        условие цикла (число < 7) выполнилось 3-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}
Объясните, почему наличие условия цикла в указанном месте ошибочно.
Наличие условия цикла в указанном месте ошибочно, потому что ...
Условие цикл "по_нечётным" выполнять рано, т.к., после первой итерации цикла ДЛЯ необходимо было выполнить переход цикла (как после второй итерации). В данном случае, после завершения первой итерации цикла ошибочно пропущен переход цикла ДЛЯ.


******************************************************

категории ошибок: For_Loop (Missing Iteration Between Condition and ForUpdate)

/*
11_for372 110 Missing Iteration Between Condition and ForUpdate (с.5) подряд условие и переход
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число < 7) выполнилось 1-й раз - истина
        выполнился переход (увеличить число на 2) 1-й раз  // ошибка !
        условие цикла (число < 7) выполнилось 2-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 2-й раз
        условие цикла (число < 7) выполнилось 3-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}
Объясните, почему наличие перехода цикла в указанном месте ошибочно.
Наличие перехода цикла в указанном месте ошибочно, потому что ...
Переход цикла "по_нечётным" выполнять рано, т.к., после первой проверки условия цикла необходимо было выполнить первую итерацию цикла ДЛЯ.


******************************************************

категории ошибок: For_Loop (Missing Condition Between ForUpdate and Iteration)

/*
11_for372 110 Missing Condition Between ForUpdate and Iteration (с.9) подряд переход и итерация
*/ {
началась программа
    начался цикл по_нечётным 1-й раз
        выполнилась инициализация (число = 3) 1-й раз
        условие цикла (число < 7) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_нечётным
            печатать_число выполнилось 1-й раз
        закончилась итерация 1 цикла по_нечётным
        выполнился переход (увеличить число на 2) 1-й раз
        началась итерация 2 цикла по_нечётным  // ошибка !
            печатать_число выполнилось 2-й раз
        закончилась итерация 2 цикла по_нечётным
        выполнился переход (увеличить число на 2) 2-й раз
        условие цикла (число < 7) выполнилось 2-й раз - ложь
    закончился цикл по_нечётным 1-й раз
закончилась программа
}
Объясните, почему наличие начала итерации в указанном месте ошибочно.
Наличие начала итерации в указанном месте ошибочно, потому что ...
Вторую итерацию цикла "по_нечётным" начинать рано, т.к. сначала цикл должен был проверить условие продолжения ("число < 7"). Т.е., пропущено условие цикла.




******************************************************

категории ошибок: Foreach_Loop (MissingIsEmptyCheckInForeach)

/*
08_foreach 10 MissingIsEmptyCheckInForeach (с.3) нет проверки на пустоту коллекции
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        выполнился переход (к первому элементу) 1-й раз  // ошибка !
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие перехода цикла в указанном месте ошибочно.
Наличие перехода цикла в указанном месте ошибочно, потому что ...
Переход цикла "печать_массива_А" выполнять рано, т.к., в самом начале цикла ДЛЯ КАЖДОГО, прежде чем переходить к первому элементу, необходимо было выполнить проверку на существование первого элемента.


******************************************************

категории ошибок: Foreach_Loop (DuplicateOfIsEmptyCheckInForeach)

/*
08_foreach 10 DuplicateOfIsEmptyCheckInForeach (с.8) дубликат первой проверки
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (первый элемент существует) выполнилось 2-й раз - истина // ошибка !
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие проверки на существование первого элемента в указанном месте ошибочно.
Наличие проверки на существование первого элемента в указанном месте ошибочно, потому что ...
Проверка на существование первого элемента не выполнится, т.к. в рамках цикла ДЛЯ КАЖДОГО эта проверка должна выполняться единственный раз в начале цикла. В данном случае, проверка на существование первого элемента коллекции ошибочно выполнена второй раз.


******************************************************

категории ошибок: Foreach_Loop (ExtraActsBetweenFalseIsNotEmptyCheckAndForeachEnd)

/*
08_foreach 0 ExtraActsBetweenFalseIsNotEmptyCheckAndForeachEnd (с.4) пусто и не конец цикла
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - ложь
        началась итерация 1 цикла печать_массива_А  // ошибка !
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие начала итерации в указанном месте ошибочно.
Наличие начала итерации в указанном месте ошибочно, потому что ...
Итерация и все последующие акты цикла не выполнятся, т.к. по ложному условию существования первого элемента цикл ДЛЯ КАЖДОГО сразу завершается. В данном случае, между завершающей проверкой условия и концом цикла присутствуют лишние акты (итерация и проверка условия).


******************************************************

категории ошибок: Foreach_Loop (MissingForeachInitIfNotEmpty)

/*
08_foreach 10 MissingForeachInitIfNotEmpty (с.4) нет инициализации Foreach
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        началась итерация 1 цикла печать_массива_А  // ошибка !
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие начала итерации в указанном месте ошибочно.
Наличие начала итерации в указанном месте ошибочно, потому что ...
Первую итерацию выполнять рано, т.к. в цикле ДЛЯ КАЖДОГО перед первой итерацией должна произойти инициализация цикла, т.е. переход к первому элементу коллекции. Т.обр., пропущено однократное действие "переход к первому элементу".


******************************************************

категории ошибок: Foreach_Loop (DuplicateOfForeachInit)

/*
08_foreach 110 DuplicateOfForeachInit (с.9) дубликат инициализации Foreach
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз  // ошибка !
        началась итерация 2 цикла печать_массива_А
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие перехода к первому элементу в указанном месте ошибочно.
Наличие перехода к первому элементу в указанном месте ошибочно, потому что ...
Переход к первому элементу не выполнится повторно, т.к. в цикле ДЛЯ КАЖДОГО инициализация цикла (т.е. переход к первому элементу коллекции) выполняется однократно перед первой итерацией цикла. Перед последующими итерациями (начиная со второй) должен происходить переход к следующему элементу. Т.обр., акт "переход к первому элементу" ошибочно заменил акт "переход к следующему элементу".


******************************************************

категории ошибок: Foreach_Loop (MissingIsEmptyCheckBeforeForeachInit)

/*
08_foreach 10 MissingIsEmptyCheckBeforeForeachInit (с.3) нет первой проверки
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        выполнился переход (к первому элементу) 1-й раз  // ошибка !
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие перехода к первому элементу в указанном месте ошибочно.
Наличие перехода к первому элементу в указанном месте ошибочно, потому что ...
Переход к первому элементу выполнять рано, т.к. цикл ДЛЯ КАЖДОГО должен сначала убедиться в наличии хотя бы одного элемента в итерируемой коллекции. Для этого в начале цикла выполняется проверка на существование первого элемента коллекции, а затем (в случае его наличия) происходит переход к нему. Т.обр., пропущен акт проверки условия на существование первого элемента коллекции.


******************************************************

категории ошибок: Foreach_Loop (MissingIterationAfterForeachInit)

/*
08_foreach 10 MissingIterationAfterForeachInit (с.5) нет первой итерации
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        условие (следующий элемент существует) выполнилось 1-й раз - ложь // ошибка !
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие проверки на существование следующего элемента в указанном месте ошибочно.
Наличие проверки на существование следующего элемента в указанном месте ошибочно, потому что ...
Проверка на существование следующего элемента не выполнится, т.к. после перехода цикл ДЛЯ КАЖДОГО должен был начать очередную итерацию. В данном случае итерация пропущена.


******************************************************

категории ошибок: Foreach_Loop (MissingForeachUpdateAfterTrueCondition)

/*
08_foreach 110 MissingForeachUpdateAfterTrueCondition (с.13) пропущен переход
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        началась итерация 2 цикла печать_массива_А // ошибка !
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие начала итерации в указанном месте ошибочно.
Наличие начала итерации в указанном месте ошибочно, потому что ...
Вторую итерацию цикла ДЛЯ КАЖДОГО начинать рано, т.к. сначала цикл "печать_массива_А" должен был выполнить переход цикла (как после первой проверки условия). Т.е., пропущен переход цикла ДЛЯ КАЖДОГО.


******************************************************

категории ошибок: Foreach_Loop (MissingIterationAfterForeachUpdate)

/*
08_foreach 110 MissingIterationAfterForeachUpdate (с.10) нет итерации после перехода
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к следующему элементу) 1-й раз
        условие (следующий элемент существует) выполнилось 2-й раз - ложь // ошибка !
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
Объясните, почему наличие условия цикла в указанном месте ошибочно.
Наличие условия цикла в указанном месте ошибочно, потому что ...
Условие цикла ДЛЯ КАЖДОГО проверять рано, т.к. сначала цикл "печать_массива_А" должен был выполнить вторую итерацию. Т.е., пропущена итерация.


******************************************************








