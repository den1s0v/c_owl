{
"algorithm": [
    // "начать_с_первого_элемента_массива",
	{"while":"есть_элементы", "name":"по_массиву", "body": [
			"печатать_элемент",
			"перейти_к_следующему"
		]
	}
]
}
// оставим 2 уже сделанных вопроса, больше не будем использовать этот алгоритм ...

// SKIP: поместить любой комментарий до или после начальной { алгоритма


// алгоритм 07_while (while в стиле foreach, с 2 действиями)
{
пока есть_элементы  // по_массиву
{
    печатать_элемент
    перейти_к_следующему
}
}

/* 
07_while 0 (с.2) начало цикла (IS_containment)
трасса категории ошибок: IS_containment LinearOrder
*/
{
началась программа
    начался цикл по_массиву 1-й раз  // начало цикла
        условие (есть_элементы) выполнилось 1-й раз - ложь
    закончился цикл по_массиву 1-й раз
закончилась программа
}
Объясните, почему начало цикла должно стоять в указанном месте.
Начало цикла должно стоять в указанном месте, потому что ...
В данном случае цикл является первым оператором программы, поэтому он должен начинаться сразу после начала программы.

**начало цикла** - bold

/* 
07_while 0 (с.3) проверка условия (Conditional_Loop)
категории ошибок: Conditional_Loop (NoCondition)
*/
{
началась программа
    начался цикл по_массиву 1-й раз
        условие (есть_элементы) выполнилось 1-й раз - ложь  // проверка условия
    закончился цикл по_массиву 1-й раз
закончилась программа
}
Объясните, почему проверка условия должна стоять в указанном месте.
Проверка условия должна стоять в указанном месте, потому что ...
Цикл ПОКА является циклом с предусловием, поэтому он проверяет условие перед выполнением тела цикла (итерации), из-за чего тело может не выполниться ни разу.

...


// =======================
// =======================
// =======================
// =======================
// =======================

{
"algorithm": [

	{"foreach":"элемента", "in": "массиве А", "name":"печать_массива_А", "body": [
			"печатать_элемент"
		]
	}
]
}

// алгоритм 08_foreach
{
для каждого элемента в массиве_А  // печать_массива_А
    печатать_элемент
}

// трассы
{

/* 
08_foreach 0 (с.3) первая проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - ложь // проверка условия
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
/*
08_foreach 10 (с.3) первая проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина // проверка условия
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
/* 
08_foreach 110 (с.3) первая проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина // проверка условия
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к следующему элементу) 1-й раз
        началась итерация 2 цикла печать_массива_А
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop NoCondition
Объясните, по какой причине проверка условия необходима в указанном месте.
Проверка условия должна стоять в указанном месте, потому что ...
Цикл ДЛЯ КАЖДОГО является циклом с предусловием, поэтому перед каждой итерацией он должен проверять условие продолжения цикла.

/* 
08_foreach 10 (с.4) инициализация foreach (Foreach_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз // переход цикла
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
/* 
08_foreach 110 (с.4) инициализация foreach (Foreach_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз // переход цикла
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к следующему элементу) 1-й раз
        началась итерация 2 цикла печать_массива_А
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
категории ошибок: Foreach_Loop MissingForeachInitIfNotEmpty
Объясните, по какой причине переход цикла к первому элементу необходим в указанном месте.
Переход цикла к первому элементу должен стоять в указанном месте, потому что ...
В случае цикла ДЛЯ КАЖДОГО, переход к первому элементу итерируемой коллекции должен выполняться сразу после истинной проверки на существование первого элемента (т.е. коллекция не пуста).


/* 
08_foreach 110 (с.9) переход foreach (Foreach_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к следующему элементу) 1-й раз // переход цикла
        началась итерация 2 цикла печать_массива_А
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
категории ошибок: Foreach_Loop MissingForeachUpdateAfterTrueCondition
Объясните, по какой причине переход цикла к следующему элементу необходим в указанном месте.
Переход цикла к следующему элементу должен стоять в указанном месте, потому что ...
В случае цикла ДЛЯ КАЖДОГО, переход к следующему элементу итерируемой коллекции должен выполняться сразу после истинной проверки на существование следующего элемента (т.е. коллекция ещё не закончилась).


/* 
08_foreach 0 (с.4) конец цикла (Foreach_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз  // конец цикла
закончилась программа
}
категории ошибок: Foreach_Loop ExtraActsBetweenFalseIsNotEmptyCheckAndForeachLoopEnd
,
/* 
08_foreach 10 (с.9) конец цикла (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз  // конец цикла
закончилась программа
}
/* 
08_foreach 110 (с.14) конец цикла (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к следующему элементу) 1-й раз
        началась итерация 2 цикла печать_массива_А
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь
    закончился цикл печать_массива_А 1-й раз  // конец цикла
закончилась программа
}
категории ошибок: Conditional_Loop ExtraActsBetweenFalseLoopConditionAndLoopEnd
Объясните, по какой причине конец цикла необходим в указанном месте.
Конец цикла должен стоять в указанном месте, потому что ...
По ложному условию продолжения цикл должен закончиться.


/* 
08_foreach 10 (с.8) 2-я проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь // проверка условия
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
/* 
08_foreach 110 (с.8) 2-я проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина // проверка условия
        выполнился переход (к следующему элементу) 1-й раз
        началась итерация 2 цикла печать_массива_А
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
/* 
08_foreach 110 (с.13) 3-я проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к следующему элементу) 1-й раз
        началась итерация 2 цикла печать_массива_А
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь // проверка условия
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop NoConditionAfterIteration
Объясните, по какой причине проверка условия необходима в указанном месте.
Проверка условия должна стоять в указанном месте, потому что ...
Цикл ДЛЯ КАЖДОГО является циклом с предусловием, поэтому перед каждыми переходом и итерацией он должен проверять условие продолжения цикла.


// трассы подряд (ШАБЛОН) ==========================

/* 
08_!!foreach 0 (с.) ини_____ция (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
/* 
08_!!foreach 10 (с.) ини_____ция (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}
/* 
08_!!foreach 110 (с.) ини_____ция (Conditional_Loop)
*/ {
началась программа
    начался цикл печать_массива_А 1-й раз
        условие (первый элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к первому элементу) 1-й раз
        началась итерация 1 цикла печать_массива_А
            печатать_элемент выполнилось 1-й раз
        закончилась итерация 1 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 1-й раз - истина
        выполнился переход (к следующему элементу) 1-й раз
        началась итерация 2 цикла печать_массива_А
            печатать_элемент выполнилось 2-й раз
        закончилась итерация 2 цикла печать_массива_А
        условие (следующий элемент существует) выполнилось 2-й раз - ложь
    закончился цикл печать_массива_А 1-й раз
закончилась программа
}

кон alg_08 }




// =======================
// =======================
// =======================
// =======================
// =======================


// алгоритм 09_for+if
{
для день от 16 до 17 с шагом +1  // по_рабочим_дням
    если работал  // работал_ли
        молодец
}

// трассы:  10100, 11100, 10110, 11110 ==========================
{

/* 
09_for+if 10100 (с.3) инициализация цикла (For_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз  // инициализация цикла
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11100 (с.3) инициализация цикла (For_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз  // инициализация цикла
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 10110 (с.3) инициализация цикла (For_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз  // инициализация цикла
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11110 (с.3) инициализация цикла (For_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз  // инициализация цикла
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: For_Loop NoInitActInForLoop 

    // Объясните, с какой целью инициализация цикла стоит в указанном месте, и можно было бы без неё обойтись?
Объясните, по какой причине инициализация цикла необходима в указанном месте.
Инициализация цикла должна стоять в указанном месте, потому что ...
    // Цикл ДЛЯ управляет переменной цикла (счётчиком цикла) самостоятельно, поэтому в начале цикла он должен установить её в начальное значение.
    // Без инициализации обойтись нельзя, т.к. в ней счётчик цикла получает начальное значение, инициализация должна стоять в самом начале цикла, потому что до неё любые действия цикла будут бессмысленны.
Инициализация цикла ДЛЯ необходима для установки переменной цикла (счётчика цикла) в начальное значение (16). Инициализация всегда выполняется в самом начале цикла ДЛЯ, т.к. любые действия цикла до неё будут бессмысленны.


/* 
09_for+if 10100 (с.4) первая проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина // проверка условия
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11100 (с.4) первая проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина // проверка условия
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 10110 (с.4) первая проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина // проверка условия
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11110 (с.4) первая проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина // проверка условия
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop NoCondition
Объясните, по какой причине проверка условия необходима в указанном месте.
Проверка условия должна стоять в указанном месте, потому что ...
Цикл ДЛЯ является циклом с предусловием, поэтому перед каждой итерацией он должен проверять условие продолжения цикла.


/* 
09_for+if 10100 (с.5) начало 1-ой итерации (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням  // начало итерации
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11100 (с.5) начало 1-ой итерации (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням  // начало итерации
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 10110 (с.5) начало 1-ой итерации (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням  // начало итерации
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11110 (с.5) начало 1-ой итерации (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням  // начало итерации
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop MissingIterationAfterTrueCondition
Объясните, по какой причине начало итерации необходимо в указанном месте.
Начало итерации должно стоять в указанном месте, потому что ...
Если условие продолжения цикла истинно, то за ним должна следовать итерация этого цикла.


/* 
09_for+if 10100 (с.6) начало развилки в теле for (IS_containment)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз  // начало развилки
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11100 (с.6) начало развилки в теле for (IS_containment)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз  // начало развилки
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 10110 (с.6) начало развилки в теле for (IS_containment)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз  // начало развилки
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11110 (с.6) начало развилки в теле for (IS_containment)  
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз  // начало развилки
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: IS_containment
Объясните, по какой причине начало развилки необходимо в указанном месте.
Начало развилки должно стоять в указанном месте, потому что ...
В данном случае, развилка "работал_ли" составляет содержимое тела цикла "по_рабочим_дням", поэтому всегда выполняется в рамках итерации этого цикла.


/* 
09_for+if 10100 (с.9) конец 1-ой итерации (IS_containment)  
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням // конец итерации
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11100 (с.12) конец 1-ой итерации (IS_containment) 
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням // конец итерации
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 10110 (с.9) конец 1-ой итерации (IS_containment) 
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням // конец итерации
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11110 (с.12) конец 1-ой итерации (IS_containment) 
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням // конец итерации
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: IS_containment  
Объясните, по какой причине конец итерации необходим в указанном месте.
Конец итерации должен стоять в указанном месте, потому что ...
В данном случае развилка "работал_ли" является единственным и последним действием в теле цикла "по_рабочим_дням", поэтому сразу после конца развилки итерация должна закончиться.


/* 
09_for+if 10100 (с.10) 1-ый переход цикла for (For_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз // переход цикла
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11100 (с.13) 1-ый переход цикла for (For_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз // переход цикла
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 10110 (с.10) 1-ый переход цикла for (For_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз // переход цикла
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11110 (с.13) 1-ый переход цикла for (For_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз // переход цикла
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: For_Loop NoForUpdateActAfterIteration
Объясните, по какой причине переход цикла необходим в указанном месте.
Переход цикла должен стоять в указанном месте, потому что ...
Переход цикла ДЛЯ должен выполняться сразу после завершения очередной итерации.


/* 
09_for+if 10100 (с.11) 2-я проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина // проверка условия
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11100 (с.14) 2-я проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина // проверка условия
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 10110 (с.11) 2-я проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина // проверка условия
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11110 (с.14) 2-я проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина // проверка условия
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop MissingConditionAfterForUpdate
Объясните, по какой причине проверка условия необходима в указанном месте.
Проверка условия должна стоять в указанном месте, потому что ...
Цикл ДЛЯ является циклом с предусловием, поэтому перед каждой итерацией (но после перехода предыдущей итерации) он должен проверять условие продолжения цикла.

/* 
09_for+if 10100 (с.19) конец цикла for (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз  // конец цикла
закончилась программа
}
/* 
09_for+if 11100 (с.22) конец цикла for (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз  // конец цикла
закончилась программа
}
/* 
09_for+if 10110 (с.22) конец цикла for (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз  // конец цикла
закончилась программа
}
/* 
09_for+if 11110 (с.25) конец цикла for (Conditional_Loop)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз  // конец цикла
закончилась программа
}
категории ошибок: Conditional_Loop ExtraActsBetweenFalseLoopConditionAndLoopEnd
Объясните, по какой причине конец цикла необходим в указанном месте.
Конец цикла должен стоять в указанном месте, потому что ...
Если условие продолжения цикла ложно, цикл должен закончиться.


/* 
09_for+if 10100 (с.-) нет актов =молодец= (Loop+Alternative)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop Alternative
Объясните, по какой причине акт "молодец" ни разу не встречается в трассе.
Акт "молодец" не встречается в трассе ни разу, потому что ...
Акт "молодец" мог бы выполниться при истинном условии "работал", но оба раза, когда развилка "работал_ли" выполнялась в цикле, условие оказывалось ложным.


/* 
09_for+if 11100 (с.9) один акт =молодец= (Loop+Alternative)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз  // акт "молодец"
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop Alternative
Объясните, по какой причине акт "молодец" встречается в трассе только один раз.
Акт "молодец" встречается в трассе только один раз, потому что ...
Акт "молодец" мог бы выполниться при истинном условии "работал", но из двух раз, когда развилка "работал_ли" выполнялась в цикле, условие оказалось истинным только один раз (другой раз - ложным).

/* 
09_for+if 10110 (с.16) один акт =молодец= (Loop+Alternative)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз  // акт "молодец"
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop Alternative
Объясните, по какой причине акт "молодец" встречается в трассе только один раз.
Акт "молодец" встречается в трассе только один раз, потому что ...
Акт "молодец" мог бы выполниться при истинном условии "работал", но из двух раз, когда развилка "работал_ли" выполнялась в цикле, условие оказалось один раз ложным, и только один раз - истинным.

/* 
09_for+if 11110 (с.9,19) два акта =молодец= (Loop+Alternative)
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз  // акт "молодец"
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз  // акт "молодец"
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop Alternative
// Объясните, по какой причине акт "молодец" встречается в трассе программы не менее двух раз.
Объясните, по какой причине акт "молодец" встречается в трассе программы два раза, и почему не меньше.
Акт "молодец" встречается в трассе ровно два раза, потому что ...
Акт "молодец" мог бы не выполниться при ложном условии "работал", но оба раза, когда развилка "работал_ли" выполнялась в цикле, условие оказалось истинным. Таким образом, на каждой итерации цикла "по_рабочим_дням" выполнялся один акт "молодец".



// трассы подряд (ШАБЛОН) ==========================

/* 
09_for+if 10100 (с.) 
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11100 (с.) 
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - ложь
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 10110 (с.) 
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - ложь
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
/* 
09_for+if 11110 (с.) 
*/ {
началась программа
    начался цикл по_рабочим_дням 1-й раз
        выполнилась инициализация (день = 16) 1-й раз
        условие цикла (день <= 17) выполнилось 1-й раз - истина
        началась итерация 1 цикла по_рабочим_дням
            началась развилка работал_ли 1-й раз
                условие развилки (работал) выполнилось 1-й раз - истина
                ветка условия развилки (работал) началась 1-й раз
                    молодец выполнилось 1-й раз
                ветка условия развилки (работал) закончилась 1-й раз
            закончилась развилка работал_ли 1-й раз
        закончилась итерация 1 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 1-й раз
        условие цикла (день <= 17) выполнилось 2-й раз - истина
        началась итерация 2 цикла по_рабочим_дням
            началась развилка работал_ли 2-й раз
                условие развилки (работал) выполнилось 2-й раз - истина
                ветка условия развилки (работал) началась 2-й раз
                    молодец выполнилось 2-й раз
                ветка условия развилки (работал) закончилась 2-й раз
            закончилась развилка работал_ли 2-й раз
        закончилась итерация 2 цикла по_рабочим_дням
        выполнился переход (прибавить 1 к день) 2-й раз
        условие цикла (день <= 17) выполнилось 3-й раз - ложь
    закончился цикл по_рабочим_дням 1-й раз
закончилась программа
}
категории ошибок: For_Loop 

кон alg_09 }

// =======================
// =======================
// =======================
// =======================
// =======================

{
"algorithm": [

	{"while":"красный", "name":"ожидание", "body": [
			"ждать"
		]
	},
    "ждать_секунды(3)",
    "идти"
]
}
// алгоритм 10_while
{
пока красный  // ожидание
    ждать
ждать_секунды(3)
идти
}

// трассы
{

/* 
10_while 0 (с.3) проверка условия (While_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - ложь // проверка условия
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 10 (с.3) проверка условия (While_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина // проверка условия
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 10 (с.7) проверка условия (While_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - ложь // проверка условия
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 110 (с.3) проверка условия (While_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина // проверка условия
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - истина
        началась итерация 2 цикла ожидание
            ждать выполнилось 2-й раз
        закончилась итерация 2 цикла ожидание
        условие цикла (красный) выполнилось 3-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 110 (с.7) проверка условия (While_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - истина // проверка условия
        началась итерация 2 цикла ожидание
            ждать выполнилось 2-й раз
        закончилась итерация 2 цикла ожидание
        условие цикла (красный) выполнилось 3-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 110 (с.11) проверка условия (While_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - истина
        началась итерация 2 цикла ожидание
            ждать выполнилось 2-й раз
        закончилась итерация 2 цикла ожидание
        условие цикла (красный) выполнилось 3-й раз - ложь // проверка условия
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
категории ошибок: While_Loop (MissingConditionBeforeWhileIteration) Conditional_Loop (NoCondition)
Объясните, по какой причине проверка условия необходима в указанном месте.
Проверка условия должна стоять в указанном месте, потому что ...
Цикл ПОКА является циклом с предусловием, поэтому перед каждой (возможной) итерацией он должен проверять условие продолжения цикла.



/* 
10_while 0 (с.4) конец цикла (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - ложь
    закончился цикл ожидание 1-й раз  // конец цикла
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 10 (с.8) конец цикла (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - ложь
    закончился цикл ожидание 1-й раз  // конец цикла
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 110 (с.12) конец цикла (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - истина
        началась итерация 2 цикла ожидание
            ждать выполнилось 2-й раз
        закончилась итерация 2 цикла ожидание
        условие цикла (красный) выполнилось 3-й раз - ложь
    закончился цикл ожидание 1-й раз  // конец цикла
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop ExtraActsBetweenFalseLoopConditionAndLoopEnd
Объясните, по какой причине конец цикла необходим в указанном месте.
Конец цикла должен стоять в указанном месте, потому что ...
Если условие продолжения цикла ложно, то цикл должен завершиться.


/* 
10_while 10 (с.4) начало итерации (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание  // начало итерации
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 110 (с.4) начало итерации (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание  // начало итерации
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - истина
        началась итерация 2 цикла ожидание
            ждать выполнилось 2-й раз
        закончилась итерация 2 цикла ожидание
        условие цикла (красный) выполнилось 3-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 110 (с.8) начало итерации (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - истина
        началась итерация 2 цикла ожидание  // начало итерации
            ждать выполнилось 2-й раз
        закончилась итерация 2 цикла ожидание
        условие цикла (красный) выполнилось 3-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop MissingIterationAfterTrueCondition
Объясните, по какой причине начало итерации необходимо в указанном месте.
Начало итерации должно стоять в указанном месте, потому что ...
Если условие продолжения цикла истинно, то за ним должна следовать итерация этого цикла.


/* 
10_while 0 (с.5) акт после цикла (LinearOrder)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз  // акт 
    идти выполнилось 1-й раз
закончилась программа
}
категории ошибок: LinearOrder ActsPairMisorder
Объясните, по какой причине акт "ждать_секунды(3)" необходим в указанном месте.
Акт "ждать_секунды(3)" должен стоять в указанном месте, потому что ...
Акт вызова процедуры "ждать_секунды" с фактическим параметром "3" должен выполниться сразу после цикла "ожидание", т.к. последовательные действия выполняются в том порядке, в котором записаны.

/* 
10_while 0 (с.6) 2-й акт после цикла (LinearOrder)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз  // акт 
закончилась программа
}
категории ошибок: Sequence LinearOrder ActsPairMisorder
Объясните, по какой причине акт "идти" необходим в указанном месте.
Акт "идти" должен стоять в указанном месте, потому что ...
Акт вызова процедуры (без параметров) "идти" должен выполниться сразу после акта "ждать_секунды(3)", т.к. последовательные действия выполняются в том порядке, в котором записаны.


// трассы подряд (ШАБЛОН) ==========================

/* 
10_while 0 (с.3) проверка (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 10 (с.3) проверка (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}
/* 
10_while 110 (с.3) проверка (Conditional_Loop)
*/ {
началась программа
    начался цикл ожидание 1-й раз
        условие цикла (красный) выполнилось 1-й раз - истина
        началась итерация 1 цикла ожидание
            ждать выполнилось 1-й раз
        закончилась итерация 1 цикла ожидание
        условие цикла (красный) выполнилось 2-й раз - истина
        началась итерация 2 цикла ожидание
            ждать выполнилось 2-й раз
        закончилась итерация 2 цикла ожидание
        условие цикла (красный) выполнилось 3-й раз - ложь
    закончился цикл ожидание 1-й раз
    ждать_секунды(3) выполнилось 1-й раз
    идти выполнилось 1-й раз
закончилась программа
}

кон alg_10 }



// =======================
// =======================
// =======================
// =======================
// =======================

{
"algorithm": [

	{"name":"ввод_даты", "body": [
			"запросить_дату"
		],
        "do while":"дата_некорректна"
	}
]
}

// алгоритм 06_do
{
делать   // ввод_даты
    запросить_дату
пока дата_некорректна
}

// трассы
{

/* 
06_do 0 (с.3) первая итерация (Do_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты  // начало итерации
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 10 (с.3) первая итерация (Do_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты  // начало итерации
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 110 (с.3) первая итерация (Do_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты  // начало итерации
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - истина
        началась итерация 3 цикла ввод_даты
            запросить_дату выполнилось 3-й раз
        закончилась итерация 3 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 3-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
категории ошибок: Do_Loop NoIterationsInDoLoop
Объясните, по какой причине начало итерации необходимо в указанном месте.
Начало итерации должно стоять в указанном месте, потому что ...
Цикл ДО является циклом с постусловием (т.е. условие проверяется после итерации), поэтому первая итерация цикла ДО выполняется всегда (без предварительной проверки условия).


/* 
06_do 0 (с.6) проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - ложь // проверка условия
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 10 (с.6) проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина // проверка условия
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 10 (с.10) проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - ложь // проверка условия
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 110 (с.6) проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина // проверка условия
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - истина
        началась итерация 3 цикла ввод_даты
            запросить_дату выполнилось 3-й раз
        закончилась итерация 3 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 3-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 110 (с.10) проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - истина // проверка условия
        началась итерация 3 цикла ввод_даты
            запросить_дату выполнилось 3-й раз
        закончилась итерация 3 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 3-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 110 (с.14) проверка условия (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - истина
        началась итерация 3 цикла ввод_даты
            запросить_дату выполнилось 3-й раз
        закончилась итерация 3 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 3-й раз - ложь // проверка условия
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
категории ошибок: Conditional_Loop NoCondition
Объясните, по какой причине проверка условия необходима в указанном месте.
Проверка условия должна стоять в указанном месте, потому что ...
Цикл ДО является циклом с постусловием, т.е. после каждой итерации он должен проверять условие продолжения цикла.


/* 
06_do 0 (с.7) конец цикла (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - ложь
    закончился цикл ввод_даты 1-й раз  // конец цикла
закончилась программа
}
/* 
06_do 10 (с.11) конец цикла (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - ложь
    закончился цикл ввод_даты 1-й раз  // конец цикла
закончилась программа
}
/* 
06_do 110 (с.15) конец цикла (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - истина
        началась итерация 3 цикла ввод_даты
            запросить_дату выполнилось 3-й раз
        закончилась итерация 3 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 3-й раз - ложь
    закончился цикл ввод_даты 1-й раз  // конец цикла
закончилась программа
}
категории ошибок: Conditional_Loop ExtraActsBetweenFalseLoopConditionAndLoopEnd
Объясните, по какой причине конец цикла необходим в указанном месте.
Конец цикла должен стоять в указанном месте, потому что ...
Если условие продолжения цикла ложно, то цикл должен завершиться.


// трассы подряд (ШАБЛОН) ==========================

/* 
06_do 0 (с.) первая (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 10 (с.) первая (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}
/* 
06_do 110 (с.) первая (Conditional_Loop)
*/ {
началась программа
    начался цикл ввод_даты 1-й раз
        началась итерация 1 цикла ввод_даты
            запросить_дату выполнилось 1-й раз
        закончилась итерация 1 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 1-й раз - истина
        началась итерация 2 цикла ввод_даты
            запросить_дату выполнилось 2-й раз
        закончилась итерация 2 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 2-й раз - истина
        началась итерация 3 цикла ввод_даты
            запросить_дату выполнилось 3-й раз
        закончилась итерация 3 цикла ввод_даты
        условие цикла (дата_некорректна) выполнилось 3-й раз - ложь
    закончился цикл ввод_даты 1-й раз
закончилась программа
}

кон 06_do }