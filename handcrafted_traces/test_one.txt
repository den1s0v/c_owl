// алгоритм alg
{
пока не_зелёный -> истина,истина,ложь  // ожидание
    если цвет_красный -> истина,ложь  // по_цвету
        ждать
    иначе если цвет_жёлтый -> ложь
        приготовиться
}


// alg трасса 
{
началась программа
начался цикл ожидание 1-й раз
началась итерация 1 цикла ожидание
условие цикла (не_зелёный) выполнилось 1-й раз - истина
началась развилка по_цвету 1-й раз
условие развилки (цвет_красный) выполнилось 1-й раз - истина
ветка условия развилки (цвет_красный) началась 1-й раз
ждать выполнилось 1-й раз
ветка условия развилки (цвет_красный) закончилась 1-й раз
закончилась развилка по_цвету 1-й раз
закончилась итерация 1 цикла ожидание
условие цикла (не_зелёный) выполнилось 2-й раз - истина
началась итерация 2 цикла ожидание
началась развилка по_цвету 2-й раз
условие развилки (цвет_красный) выполнилось 2-й раз - ложь
условие развилки (цвет_жёлтый) выполнилось 1-й раз - ложь
закончилась развилка по_цвету 2-й раз
закончилась итерация 2 цикла ожидание
условие цикла (не_зелёный) выполнилось 3-й раз - ложь
закончился цикл ожидание 1-й раз
закончилась программа
}


// алгоритм MUTE_example_alt (<< ... после имени, через пробел допускается произвольный текст)
{
	поприветствовать
	если ответ_позитивный -> ложь // по_ответу
		поддержать_тон
		рассказать_анекдот
	иначе если ответ_негативный -> истина
	{
		удивиться
		узнать_что_случилось
		посочувствовать
	}
	иначе
		спросить_о_настроении
	пожелать_удачи
}



 
 


// example_alt первая трасса
// в строке выше - имя трассы (комментарий "//" или "#" отбрасывается)
{
началась программа
поприветствовать выполнилось 1-й раз 
началась развилка по_ответу 1-й раз  // начало развилки
условие (ответ_позитивный) выполнилось 1-й раз - ложь
условие (ответ_негативный) выполнилось 1-й раз - истина
ветка условия (ответ_негативный) началась 1-й раз
удивиться выполнилось 1-й раз 
узнать_что_случилось выполнилось 1-й раз
посочувствовать выполнилось 1-й раз 
ветка условия (ответ_негативный) закончилась 1-й раз
закончилась развилка по_ответу 1-й раз
пожелать_удачи выполнилось 1-й раз 
закончилась программа
}

