// алгоритм alg
{
while (not_green)  // waiting
{  
	if (red)  // over_color
	{  
		return -1
		wait --
	}  
	else if (yellow)
	{  
		cout << *get_ready 
		continue
		take = a_while + 3 + 'seconds'
	}  
	else if (off)
	{  
		break
		get_back ( i ) - 1
	}  
}  
}


// alg тест continue
{
началась программа
    начался цикл waiting 1-й раз
	условие (not_green) выполнилось 1-й раз - истина
    началась итерация 1 цикла waiting
    началась развилка over_color 1-й раз
		условие (red) выполнилось 1-й раз - ложь
		условие (yellow) выполнилось 1-й раз - истина
		ветка условия (yellow) началась 1-й раз
			cout<<*get_ready выполнилось 1-й раз
			continue выполнилось 1-й раз
		ветка условия (yellow) закончилась 1-й раз
    закончилась развилка over_color 1-й раз //  
    закончилась итерация 1 цикла waiting
	условие (not_green) выполнилось 2-й раз - ложь
	закончился цикл waiting 1-й раз
закончилась программа
}

// SKIP____alg тест break
{
началась программа
    начался цикл waiting 1-й раз
	условие (not_green) выполнилось 1-й раз - истина
    началась итерация 1 цикла waiting
    началась развилка over_color 1-й раз
		условие (red) выполнилось 1-й раз - ложь
		условие (yellow) выполнилось 1-й раз - ложь
		условие (off) выполнилось 1-й раз - истина
		ветка условия (off) началась 1-й раз
			break выполнилось 1-й раз
		ветка условия (off) закончилась 1-й раз
    закончилась развилка over_color 1-й раз //  
    закончилась итерация 1 цикла waiting
	закончился цикл waiting 1-й раз
закончилась программа
}

// SKIP____alg тест return
{
началась программа
    начался цикл waiting 1-й раз
	условие (not_green) выполнилось 1-й раз - истина
    началась итерация 1 цикла waiting
    началась развилка over_color 1-й раз
		условие (red) выполнилось 1-й раз - истина
		ветка условия (red) началась 1-й раз
			return-1 выполнилось 1-й раз
		ветка условия (red) закончилась 1-й раз
    закончилась развилка over_color 1-й раз //  
    закончилась итерация 1 цикла waiting
	закончился цикл waiting 1-й раз
закончилась программа
}

