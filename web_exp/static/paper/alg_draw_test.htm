<!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css"> -->
<script type="text/javascript" src="/static/jquery.js"></script>

 <script type="text/javascript" src="/static/paper/paper-full.min.js"></script>

<style type="text/css" media="screen">


	/* Подсветка алгоритма */

	#algorithm_text_field {
	  font-family: courier;
	  font-size: 10pt;
	  line-height: 1.1;
	}


    span.string, span.atom { color: #f08; font-style: italic; font-weight: bold; }
    span.comment { color: #262; font-style: italic; line-height: 1em; }
    span.meta { color: #555; font-style: italic; line-height: 1em; }
    span.variable { color: #700; text-decoration: underline; }
    span.variable-2 { color: #b11; }
    span.struct { color: #07c; font-weight: bold; }
    span.number { color: #f00; font-weight: bold; }
    span.program { color: #f70; font-weight: bold; }
    span.function { color: #707; font-weight: bold; }
    span.action { color: #077; font-weight: bold; }
    span.qualifier { color: #555; }
    span.keyword { color: #00a; font-weight: bold; }
    span.builtin { color: #30a; }
    span.link { color: #762; }

    span.warning { background-color: #ff9; }
    span.error { background-color: #fdd; }

    /*Подчёркивание кнопки точками при наведениии на всю активную лексему (акцентирование внимания на кнопке)*/
    span:hover .alg_button {
      cursor: pointer;
      border: 1px dotted black;
      margin: -1px;
    }

    .code-block {
      border-left: 1px solid transparent;
    }
    .code-line:hover > .code-block {
      border-left: 1px dotted green;
    }

.container{
/*   width:100%;*/
/*   height:300px;*/
   margin:0 auto;
   position: relative; /* add */
}
canvas{
   width:100%;
   height:100%;
   position:absolute; /* change */
   left: 0;
   top: 0;
}
/*#c{
	background-color:#111;
	margin-top:-150px;
	z-index:999999;
}*/
</style>
<script type="text/paperscript" canvas="myCanvas" src="/static/paper/paper-canvas.js"> </script>
<script type="text/javascript" src="/static/paper/diagram.js"> </script>


</head>
<body onload="on_load()">
<!-- <body> -->
<!--     <canvas id="c" width="500" height="300"></canvas>
    <div id="d" style="width:500px;height:300px"></div>
 -->
 <br><br><br>
<div id="algorithm_text_field" class="ui message" style="background-color: transparent;">
	  <canvas id="myCanvas" class="canvas" style="z-index:-1000;"></canvas>
    <div class="code-line" style=""><div class="code-line" style=""><span class="keyword">while<span class="alg_button" algorithm_element_id="28" act_type="finished" data-tooltip="Finish loop waiting" data-position="top left"><i class="stop small icon"></i></span></span>&nbsp;(<span class="variable"><span class="alg_button" algorithm_element_id="29" act_type="performed" data-tooltip="Perform condition not_green" data-position="top left"><i class="play small icon"></i></span>not_green</span>)&nbsp;&nbsp;<span class="comment">// waiting</span></div><div class="code-line" style=""><span class="">{<span class="alg_button" algorithm_element_id="37" act_type="started" data-tooltip="Start iteration of loop waiting" data-position="top left"><i class="play small icon"></i></span>&nbsp;&nbsp;</span></div><div class="code-block" style="padding-left: 2em;"><div class="code-line" style=""><div class="code-line" style=""><span class="keyword"><span class="alg_button" algorithm_element_id="30" act_type="started" data-tooltip="Start alternative over_color" data-position="top left"><i class="play small icon"></i></span>if</span> (<span class="variable"><span class="alg_button" algorithm_element_id="32" act_type="performed" data-tooltip="Perform condition red" data-position="top left"><i class="play small icon"></i></span>red</span>)&nbsp;&nbsp;<span class="comment">// over_color</span></div><div class="code-line" style=""><span class="">{<span class="alg_button" algorithm_element_id="31" act_type="started" data-tooltip="Start IF branch with condition red" data-position="top left"><i class="play small icon"></i></span>&nbsp;&nbsp;</span></div><div class="code-block" style="padding-left: 2em;"><div class="code-line" style=""><span class="variable"><span class="alg_button" algorithm_element_id="33" act_type="performed" data-tooltip="Perform statement wait()" data-position="top left"><i class="play small icon"></i></span>wait()</span>;</div></div><div class="code-line" style=""><span class="">}&nbsp;&nbsp;</span></div><div class="code-line" style=""><span class="keyword">else if</span> (<span class="variable"><span class="alg_button" algorithm_element_id="35" act_type="performed" data-tooltip="Perform condition yellow" data-position="top left"><i class="play small icon"></i></span>yellow</span>)</div><div class="code-line" style=""><span class="">{<span class="alg_button" algorithm_element_id="34" act_type="started" data-tooltip="Start IF branch with condition yellow" data-position="top left"><i class="play small icon"></i></span>&nbsp;&nbsp;</span></div><div class="code-block" style="padding-left: 2em;"><div class="code-line" style=""><span class="variable"><span class="alg_button" algorithm_element_id="36" act_type="performed" data-tooltip="Perform statement get_ready()" data-position="top left"><i class="play small icon"></i></span>get_ready()</span>;</div></div><div class="code-line" style=""><span class="">}&nbsp;&nbsp;</span></div></div></div><div class="code-line" style=""><span class="">}&nbsp;&nbsp;</span></div></div>
  </div>

<input type="hidden" id="algorithm_json" value="{&quot;entry_point&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;program&quot;,&quot;ru&quot;:&quot;программа&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;loop 'L1'&quot;,&quot;ru&quot;:&quot;цикл 'L1'&quot;},&quot;body&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;iteration of loop 'L1'&quot;,&quot;ru&quot;:&quot;итерация цикла 'L1'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;alternative 'Br2'&quot;,&quot;ru&quot;:&quot;альтернатива 'Br2'&quot;},&quot;branches&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;IF branch with condition 'ready'&quot;,&quot;ru&quot;:&quot;ветка ЕСЛИ с условием 'ready'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do1()'&quot;,&quot;ru&quot;:&quot;действие 'do1()'&quot;},&quot;id&quot;:9,&quot;name&quot;:&quot;do1()&quot;,&quot;type&quot;:&quot;stmt&quot;},{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do2()'&quot;,&quot;ru&quot;:&quot;действие 'do2()'&quot;},&quot;id&quot;:10,&quot;name&quot;:&quot;do2()&quot;,&quot;type&quot;:&quot;stmt&quot;}],&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'ready'&quot;,&quot;ru&quot;:&quot;условие 'ready'&quot;},&quot;id&quot;:8,&quot;name&quot;:&quot;ready&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:7,&quot;name&quot;:&quot;if-ready&quot;,&quot;type&quot;:&quot;if&quot;}],&quot;id&quot;:6,&quot;name&quot;:&quot;Br2&quot;,&quot;type&quot;:&quot;alternative&quot;}],&quot;id&quot;:11,&quot;name&quot;:&quot;L1_loop_body&quot;,&quot;type&quot;:&quot;sequence&quot;},&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'run'&quot;,&quot;ru&quot;:&quot;условие 'run'&quot;},&quot;id&quot;:5,&quot;name&quot;:&quot;run&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:4,&quot;name&quot;:&quot;L1&quot;,&quot;type&quot;:&quot;while_loop&quot;}],&quot;id&quot;:3,&quot;name&quot;:&quot;global_code&quot;,&quot;type&quot;:&quot;sequence&quot;},&quot;expr_values&quot;:{&quot;ready&quot;:[false,true,true,&quot;(&quot;,false,&quot;)&quot;],&quot;run&quot;:[true,true,&quot;(&quot;,false,&quot;)&quot;]},&quot;functions&quot;:[],&quot;global_code&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;program&quot;,&quot;ru&quot;:&quot;программа&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;loop 'L1'&quot;,&quot;ru&quot;:&quot;цикл 'L1'&quot;},&quot;body&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;iteration of loop 'L1'&quot;,&quot;ru&quot;:&quot;итерация цикла 'L1'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;alternative 'Br2'&quot;,&quot;ru&quot;:&quot;альтернатива 'Br2'&quot;},&quot;branches&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;IF branch with condition 'ready'&quot;,&quot;ru&quot;:&quot;ветка ЕСЛИ с условием 'ready'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do1()'&quot;,&quot;ru&quot;:&quot;действие 'do1()'&quot;},&quot;id&quot;:9,&quot;name&quot;:&quot;do1()&quot;,&quot;type&quot;:&quot;stmt&quot;},{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do2()'&quot;,&quot;ru&quot;:&quot;действие 'do2()'&quot;},&quot;id&quot;:10,&quot;name&quot;:&quot;do2()&quot;,&quot;type&quot;:&quot;stmt&quot;}],&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'ready'&quot;,&quot;ru&quot;:&quot;условие 'ready'&quot;},&quot;id&quot;:8,&quot;name&quot;:&quot;ready&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:7,&quot;name&quot;:&quot;if-ready&quot;,&quot;type&quot;:&quot;if&quot;}],&quot;id&quot;:6,&quot;name&quot;:&quot;Br2&quot;,&quot;type&quot;:&quot;alternative&quot;}],&quot;id&quot;:11,&quot;name&quot;:&quot;L1_loop_body&quot;,&quot;type&quot;:&quot;sequence&quot;},&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'run'&quot;,&quot;ru&quot;:&quot;условие 'run'&quot;},&quot;id&quot;:5,&quot;name&quot;:&quot;run&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:4,&quot;name&quot;:&quot;L1&quot;,&quot;type&quot;:&quot;while_loop&quot;}],&quot;id&quot;:3,&quot;name&quot;:&quot;global_code&quot;,&quot;type&quot;:&quot;sequence&quot;},&quot;id&quot;:2,&quot;id2obj&quot;:{&quot;3&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;program&quot;,&quot;ru&quot;:&quot;программа&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;loop 'L1'&quot;,&quot;ru&quot;:&quot;цикл 'L1'&quot;},&quot;body&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;iteration of loop 'L1'&quot;,&quot;ru&quot;:&quot;итерация цикла 'L1'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;alternative 'Br2'&quot;,&quot;ru&quot;:&quot;альтернатива 'Br2'&quot;},&quot;branches&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;IF branch with condition 'ready'&quot;,&quot;ru&quot;:&quot;ветка ЕСЛИ с условием 'ready'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do1()'&quot;,&quot;ru&quot;:&quot;действие 'do1()'&quot;},&quot;id&quot;:9,&quot;name&quot;:&quot;do1()&quot;,&quot;type&quot;:&quot;stmt&quot;},{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do2()'&quot;,&quot;ru&quot;:&quot;действие 'do2()'&quot;},&quot;id&quot;:10,&quot;name&quot;:&quot;do2()&quot;,&quot;type&quot;:&quot;stmt&quot;}],&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'ready'&quot;,&quot;ru&quot;:&quot;условие 'ready'&quot;},&quot;id&quot;:8,&quot;name&quot;:&quot;ready&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:7,&quot;name&quot;:&quot;if-ready&quot;,&quot;type&quot;:&quot;if&quot;}],&quot;id&quot;:6,&quot;name&quot;:&quot;Br2&quot;,&quot;type&quot;:&quot;alternative&quot;}],&quot;id&quot;:11,&quot;name&quot;:&quot;L1_loop_body&quot;,&quot;type&quot;:&quot;sequence&quot;},&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'run'&quot;,&quot;ru&quot;:&quot;условие 'run'&quot;},&quot;id&quot;:5,&quot;name&quot;:&quot;run&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:4,&quot;name&quot;:&quot;L1&quot;,&quot;type&quot;:&quot;while_loop&quot;}],&quot;id&quot;:3,&quot;name&quot;:&quot;global_code&quot;,&quot;type&quot;:&quot;sequence&quot;},&quot;4&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;loop 'L1'&quot;,&quot;ru&quot;:&quot;цикл 'L1'&quot;},&quot;body&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;iteration of loop 'L1'&quot;,&quot;ru&quot;:&quot;итерация цикла 'L1'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;alternative 'Br2'&quot;,&quot;ru&quot;:&quot;альтернатива 'Br2'&quot;},&quot;branches&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;IF branch with condition 'ready'&quot;,&quot;ru&quot;:&quot;ветка ЕСЛИ с условием 'ready'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do1()'&quot;,&quot;ru&quot;:&quot;действие 'do1()'&quot;},&quot;id&quot;:9,&quot;name&quot;:&quot;do1()&quot;,&quot;type&quot;:&quot;stmt&quot;},{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do2()'&quot;,&quot;ru&quot;:&quot;действие 'do2()'&quot;},&quot;id&quot;:10,&quot;name&quot;:&quot;do2()&quot;,&quot;type&quot;:&quot;stmt&quot;}],&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'ready'&quot;,&quot;ru&quot;:&quot;условие 'ready'&quot;},&quot;id&quot;:8,&quot;name&quot;:&quot;ready&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:7,&quot;name&quot;:&quot;if-ready&quot;,&quot;type&quot;:&quot;if&quot;}],&quot;id&quot;:6,&quot;name&quot;:&quot;Br2&quot;,&quot;type&quot;:&quot;alternative&quot;}],&quot;id&quot;:11,&quot;name&quot;:&quot;L1_loop_body&quot;,&quot;type&quot;:&quot;sequence&quot;},&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'run'&quot;,&quot;ru&quot;:&quot;условие 'run'&quot;},&quot;id&quot;:5,&quot;name&quot;:&quot;run&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:4,&quot;name&quot;:&quot;L1&quot;,&quot;type&quot;:&quot;while_loop&quot;},&quot;5&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'run'&quot;,&quot;ru&quot;:&quot;условие 'run'&quot;},&quot;id&quot;:5,&quot;name&quot;:&quot;run&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;6&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;alternative 'Br2'&quot;,&quot;ru&quot;:&quot;альтернатива 'Br2'&quot;},&quot;branches&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;IF branch with condition 'ready'&quot;,&quot;ru&quot;:&quot;ветка ЕСЛИ с условием 'ready'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do1()'&quot;,&quot;ru&quot;:&quot;действие 'do1()'&quot;},&quot;id&quot;:9,&quot;name&quot;:&quot;do1()&quot;,&quot;type&quot;:&quot;stmt&quot;},{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do2()'&quot;,&quot;ru&quot;:&quot;действие 'do2()'&quot;},&quot;id&quot;:10,&quot;name&quot;:&quot;do2()&quot;,&quot;type&quot;:&quot;stmt&quot;}],&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'ready'&quot;,&quot;ru&quot;:&quot;условие 'ready'&quot;},&quot;id&quot;:8,&quot;name&quot;:&quot;ready&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:7,&quot;name&quot;:&quot;if-ready&quot;,&quot;type&quot;:&quot;if&quot;}],&quot;id&quot;:6,&quot;name&quot;:&quot;Br2&quot;,&quot;type&quot;:&quot;alternative&quot;},&quot;7&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;IF branch with condition 'ready'&quot;,&quot;ru&quot;:&quot;ветка ЕСЛИ с условием 'ready'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do1()'&quot;,&quot;ru&quot;:&quot;действие 'do1()'&quot;},&quot;id&quot;:9,&quot;name&quot;:&quot;do1()&quot;,&quot;type&quot;:&quot;stmt&quot;},{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do2()'&quot;,&quot;ru&quot;:&quot;действие 'do2()'&quot;},&quot;id&quot;:10,&quot;name&quot;:&quot;do2()&quot;,&quot;type&quot;:&quot;stmt&quot;}],&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'ready'&quot;,&quot;ru&quot;:&quot;условие 'ready'&quot;},&quot;id&quot;:8,&quot;name&quot;:&quot;ready&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:7,&quot;name&quot;:&quot;if-ready&quot;,&quot;type&quot;:&quot;if&quot;},&quot;8&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'ready'&quot;,&quot;ru&quot;:&quot;условие 'ready'&quot;},&quot;id&quot;:8,&quot;name&quot;:&quot;ready&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;9&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do1()'&quot;,&quot;ru&quot;:&quot;действие 'do1()'&quot;},&quot;id&quot;:9,&quot;name&quot;:&quot;do1()&quot;,&quot;type&quot;:&quot;stmt&quot;},&quot;10&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do2()'&quot;,&quot;ru&quot;:&quot;действие 'do2()'&quot;},&quot;id&quot;:10,&quot;name&quot;:&quot;do2()&quot;,&quot;type&quot;:&quot;stmt&quot;},&quot;11&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;iteration of loop 'L1'&quot;,&quot;ru&quot;:&quot;итерация цикла 'L1'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;alternative 'Br2'&quot;,&quot;ru&quot;:&quot;альтернатива 'Br2'&quot;},&quot;branches&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;IF branch with condition 'ready'&quot;,&quot;ru&quot;:&quot;ветка ЕСЛИ с условием 'ready'&quot;},&quot;body&quot;:[{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do1()'&quot;,&quot;ru&quot;:&quot;действие 'do1()'&quot;},&quot;id&quot;:9,&quot;name&quot;:&quot;do1()&quot;,&quot;type&quot;:&quot;stmt&quot;},{&quot;act_name&quot;:{&quot;en&quot;:&quot;statement 'do2()'&quot;,&quot;ru&quot;:&quot;действие 'do2()'&quot;},&quot;id&quot;:10,&quot;name&quot;:&quot;do2()&quot;,&quot;type&quot;:&quot;stmt&quot;}],&quot;cond&quot;:{&quot;act_name&quot;:{&quot;en&quot;:&quot;condition 'ready'&quot;,&quot;ru&quot;:&quot;условие 'ready'&quot;},&quot;id&quot;:8,&quot;name&quot;:&quot;ready&quot;,&quot;type&quot;:&quot;expr&quot;},&quot;id&quot;:7,&quot;name&quot;:&quot;if-ready&quot;,&quot;type&quot;:&quot;if&quot;}],&quot;id&quot;:6,&quot;name&quot;:&quot;Br2&quot;,&quot;type&quot;:&quot;alternative&quot;}],&quot;id&quot;:11,&quot;name&quot;:&quot;L1_loop_body&quot;,&quot;type&quot;:&quot;sequence&quot;}},&quot;name&quot;:&quot;algorithm&quot;,&quot;type&quot;:&quot;algorithm&quot;}">


</body>
